En informática, cairo es una biblioteca gráfica de la api gtk+ usada para proporcionar imágenes basadas en gráficos vectoriales. aunque cairo es una api independiente de dispositivos, está diseñado para usar aceleración por hardware cuando esté disponible. cairo ofrece numerosas primitivas para imágenes de dos dimensiones. a pesar de que está escrito en c, existen implementaciones en otros lenguajes de programación, incluyendo c++, c#, common lisp, haskell, java, python, perl, ruby, scheme (guile, chicken), smalltalk y muchos otros. dada la doble licencia incluyendo la licencia pública general reducida de gnu y la licencia pública de mozilla, cairo es software libre. modelo gráfico de cairo para poder explicar el modelo gráfico que usa cairo se tienen que definir los conceptos que se utilizan. se tienen los sustantivos y los verbos. los sustantivos son objetos abstractos o entidades en los cuales operan los verbos. hay varios tipos de sustantivos y varios tipos de verbos. sustantivos verbos proceso de dibujo para poder crear una imagen, se tiene que preparar el contexto para cada uno de los verbos. para usar cairo_stroke() o cairo_fill() se necesita primero una ruta. para usar cairo_show_text() se tiene que posicionar el texto en su punto de inserción. para usar cairo_mask() se necesita una segunda superficie fuente. para las demás operaciones, incluyendo cairo_paint() sólo se necesitan una fuente primaria. hay tres tipos de fuentes principales en cairo: colores, gradientes e imágenes. los colores son los más simples; usan un color uniforme en toda la fuente. se pueden seleccionar colores sin previas preparaciones con cairo_set_source_rgb() y cairo_set_source_rgba(). usar cairo_set_source_rgb(cr, r, g, b) es equivalente a usar cairo_set_source_rgba(cr, r, g, b,1.0), lo cual pone el color fuente a su máximo nivel de opacidad. los gradientes describen una progresión de colores en función a su lugar de inicio y de fin, además de usar una serie de "paradas" a lo largo del camino. los